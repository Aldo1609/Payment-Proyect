spring:
  application:
    name: api-gateway
  server:
    port: 9090
  cloud:
    config:
      enabled: false
      import-check:
        enabled: false
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      # Rutas estáticas
      routes:
        - id: payment-health-liveness
          uri: lb://payment-service
          predicates:
            - Path=/payment-service/api/v1/healthcheck/liveness
            - Method=GET
          filters:
            - RewritePath=/payment-service/api/v1/healthcheck/liveness, /api/v1/healthcheck/liveness

        - id: payment-health-readiness
          uri: lb://payment-service
          predicates:
            - Path=/payment-service/api/v1/healthcheck/readiness
            - Method=GET
          filters:
            - RewritePath=/payment-service/api/v1/healthcheck/readiness, /api/v1/healthcheck/readiness

        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/payment-service/api/v1/payments
            - Method=POST
          filters:
            - RewritePath=/payment-service/api/v1/payments, /api/v1/payments
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@rateLimitKeyResolver}"
            - name: CircuitBreaker
              args:
                name: paymentService
                fallbackUri: forward:/fallback/payment
                statusCodes: 500,503,404

  # Configuración de Redis
  data:
    redis:
      host: localhost
      port: 6379
      connect-timeout: 2000ms
      timeout: 1000ms

# CONFIGURACIÓN EUREKA CON CREDENCIALES ✅
eureka:
  client:
    service-url:
      defaultZone: http://admin:eureka-password@localhost:8761/eureka/  # ✅ Credenciales correctas
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

# Configuración de Resilience4j para Circuit Breaker
resilience4j:
  circuitbreaker:
    instances:
      paymentService:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED

# Monitoring y Actuator
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# Logging
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    com.aldob.gateway: DEBUG
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
    reactor.netty: INFO